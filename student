#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <vector>
using namespace std;
int slines = 0;
int tlines = 0;

void getdbSize()
{

    std::string sline, tline;
    std::ifstream sfile("students.txt");
    std::ifstream tfile("teachers.txt");

    while (std::getline(sfile, sline))
        ++slines;
    while (std::getline(tfile, tline))
        ++tlines;


}

struct Students{
    string fname,lname;
    int year;
    int active;
    string class1, class2, class3, class4;
    string grade1, grade2, grade3, grade4;
}sdb[10];
struct Teachers{
    string fname, lname;
    string class1, class2, class3, class4;
}tdb[10];
struct Courses{
    string courses;
}cdb[10];


using namespace std;
void studentMenu();
void adminMenu();
void defaultMenu();
void teacherMenu();
void newStudent();
void addDropClass();
void viewClass();
void viewGrades();
void viewTeacherSchedule();
void assignGrades();
void viewStudentSchedule();
void printClass(Courses course);
void addClass(int classnum);
void addClass2(int classnum2);
void addClass3(int classnum3);
void addClass4(int classnum4);
void displayClass(Students classes);
void displayStudent(Students name);
//Load Student Database
void classes_load()
{
    ifstream classesInFile;
    classesInFile.open("classes.txt");

    if(!classesInFile)
    {
        cout<<"Cannot load file"<<endl;
        return;
    }
    else
    {

        for(int i = 0; i < sizeof(cdb)/sizeof(cdb[0]); i++)
        {
            getline(classesInFile, cdb[i].courses);
        }

        cout <<"All classes have been successfully loaded"<<endl;

        classesInFile.close();
    }
}

void sdatabase_load()
{

    ifstream sdatabaseInFile("students.txt");


    if(!sdatabaseInFile)
    {
        cout<<"Cannot load file"<<endl;
        return;
    }
    else
    {
        for(int i = 0; i < sizeof(sdb)/sizeof(sdb[0]); i++)
        {
            sdatabaseInFile>>
            sdb[i].fname>>
            sdb[i].lname>>
            sdb[i].year>>
            sdb[i].active>>
            sdb[i].class1>>
            sdb[i].class2>>
            sdb[i].class3>>
            sdb[i].class4>>
            sdb[i].grade1>>
            sdb[i].grade2>>
            sdb[i].grade3>>
            sdb[i].grade4;
            //cout <<"Student no "<<i<<" loaded"<<endl;
        }
        cout <<"All students have been successfully loaded"<<endl;
        sdatabaseInFile.close();
    }
}
void sdatabase_save()
{
    ofstream sdatabaseOutFile("students.txt");
    if(!sdatabaseOutFile)
    {
        cout<<"Cannot save file"<<endl;
        return;
    }
    else
    {
        for(int i = 0; i < sizeof(sdb)/sizeof(sdb[0]); i++)
        {
            sdatabaseOutFile<<
            sdb[i].fname<<
            sdb[i].lname<<
            sdb[i].year<<
            sdb[i].active<<
            sdb[i].class1<<
            sdb[i].class2<<
            sdb[i].class3<<
            sdb[i].class4<<
            sdb[i].grade1<<
            sdb[i].grade2<<
            sdb[i].grade3<<
            sdb[i].grade4;
            cout <<"Student no "<<i<<"saved"<<endl;
        }
        cout <<"All students have been successfully saved"<<endl;
        sdatabaseOutFile.close();
    }
}
void tdatabase_load()
{

    ifstream tdatabaseInFile("teachers.txt");


    if(!tdatabaseInFile)
    {
        cout<<"Cannot save file"<<endl;
        return;
    }
    else
    {

        for(int i = 0; i < sizeof(tdb)/sizeof(tdb[0]); i++)
        {
            tdatabaseInFile>>
            tdb[i].fname>>
            tdb[i].lname>>
            sdb[i].class1>>
            sdb[i].class2>>
            sdb[i].class3>>
            sdb[i].class4;
            //cout <<"Teacher no "<<i<<"loaded"<<endl;
        }
        cout <<"All teachers have been successfully loaded"<<endl;
        tdatabaseInFile.close();
    }
}
void tdatabase_save()
{
    ofstream tdatabaseOutFile("teachers.txt");
    if(!tdatabaseOutFile)
    {
        cout<<"Cannot save file"<<endl;
        return;
    }
    else
    {
        for(int i = 0; i < sizeof(tdb)/sizeof(tdb[0]); i++)
        {
            tdatabaseOutFile<<
            tdb[i].fname<<
            tdb[i].lname<<
            tdb[i].class1<<
            tdb[i].class2<<
            tdb[i].class3<<
            tdb[i].class4;
            cout <<"Teacher no "<<i<<"saved"<<endl;
        }
        cout <<"All teachers have been successfully saved"<<endl;
        tdatabaseOutFile.close();
    }
}


//register as a new student
void newStudent()
{
    string fname;
    string lname;
    char response;

    cout << "Enter your first name: ";
    cin >> fname;
    cout << "Enter your last name: ";
    cin >> lname;
    //display the input to user and give user the choice if it is correct or not
    cout << "Your name is " << fname << " " << lname << ".\n"
         << "Is this correct?(y or n): ";
    cin >> response;//user response to yes or no

    //if it is correct then a message display to let user know they can register for classes
    if(tolower(response) == 'y')
    {
        sdb[slines+1].fname = fname;
        sdb[slines+1].lname = lname;
        sdatabase_save();
        cout << "Now you can register for classes!" << endl;
    }
    //if it is not correct then user can input their names again
    if(tolower(response) == 'n')
    {
        //this while loop while continue to run as long as response is no or n
        while(response != 'y')
        {
            cout << "Enter your first name: ";
            cin >> fname;
            cout << "Enter your last name: ";
            cin >> lname;
            //display the input to user and give user the choice if it is correct or not
            cout << "Your name is " << fname << " " << lname << ".\n"
                 << "Is this correct?(y or n): ";
            cin >> response;
            if(response == 'y')
            {
                sdb[slines+1].fname = fname;
                sdb[slines+1].lname = lname;
                sdatabase_save();
            }
        }
    }
}
//add or drop classes(student)
void addDropClass()
{
    char input;
    cout << "Do you want to add or drop class?\n"
         << "To add class enter (a) and to drop class enter (d) (a or d): ";
    cin >> input;
    if(input == 'a')
    {
        int numb1, numb2, numb3, numb4;
        char choice;
        cout << "Here is the list of classes offer this semester: " << endl;
        for(int i = 0; i < sizeof(cdb)/sizeof(cdb[0]); i++)
        {
            printClass(cdb[i]);
        }
        cout << "Please enter the number of the class you want to take: ";
        cin >> numb1;
        addClass(numb1);
        sdatabase_save();
        //the for loop here is to limit the classes student can take to 4
        for(int i = 0; i < 3; i++)
        {
            cout << "Would you like to add another class(y or n): ";
            cin >> choice;
            if(choice == 'y')
            {
                for(int j = 0; j < sizeof(cdb)/sizeof(cdb[0]); j++)
                {
                    printClass(cdb[j]);
                }
                if(i == 0)
                {
                    cout << "Enter the number of the class you want
